{"version":3,"sources":["components/landing/Header/Header.js","components/landing/PopupWithForm/PopupWithForm.js","context/CurrentUserContext.js","components/landing/Cards/Cards.js","components/landing/ImagePopup/ImagePopup.js","components/landing/Main/Main.js","components/landing/Footer/Footer.js","utils/Api.js","components/landing/EditProfilePopup/EditProfilePopup.js","components/landing/EditAvatarPopup/EditAvatarPopup.js","components/landing/AddPlacePopup/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","href","src","logoMesto","alt","PopupWithForm","props","name","isOpen","method","action","noValidate","onSubmit","type","onClick","onClose","title","children","button","CurrentUserContext","React","createContext","Cards","currentUser","useContext","cardDeleteButtonClassName","card","owner","_id","cardLikeButtonClassName","likes","some","i","onCardDelete","link","onCardClick","onCardLike","length","ImagePopup","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","key","onSelectedCard","selectedCard","isSelectedCard","Footer","handleResponse","res","ok","json","Promise","reject","status","api","baseUrl","headers","this","fetch","then","catch","err","console","log","data","body","JSON","stringify","idCard","isLiked","authorization","EditProfilePopup","useState","setName","setAbout","useEffect","e","preventDefault","onUpdateUser","value","id","required","minLength","maxLength","onChange","target","avatarRef","useRef","current","onUpdateAvatar","ref","placeholder","AddPlacePopup","nameRef","linkRef","App","setCurrentUser","isEditProfilePopupOpen","setEditProfilePopupOpen","setCards","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isImagePopupOpen","setImagePopupOpen","setSelectedCard","closeAllPopups","all","getMe","getInitialCards","user","Provider","changeLikeCards","newCard","newCards","c","deleteCards","filter","item","userInfo","changeUserInfo","newUser","finally","EditAvatarPopup","userAvatar","changeAvatar","createCards","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.ccfb8e52.chunk.js","sourcesContent":["import React from \"react\";\nimport logoMesto from \"../../../images/logo.svg\";\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <a className=\"header__logo-link\" href=\"#root\">\n        <img\n          className=\"header__logo-img\"\n          src={logoMesto}\n          alt=\"Логотип Mesto Russia\"\n        />\n      </a>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction PopupWithForm(props) {\n  return (\n    <section className={`popup popup_type_${props.name} ${props.isOpen}`}>\n      <form\n        className=\"popup__container popup__container_form\"\n        method=\"GET\"\n        action=\"#\"\n        name={`${props.name}`}\n        noValidate\n        onSubmit={props.onSubmit}\n      >\n        <button\n          className=\"popup__close\"\n          type=\"button\"\n          onClick={props.onClose}\n        ></button>\n        <h2 className=\"popup__title popup__title_profile\">{`${props.title}`}</h2>\n        {props.children}\n        <button type=\"submit\" className=\"popup__button\">\n          {props.button}\n        </button>\n      </form>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\n\nexport const CurrentUserContext = React.createContext();\n","import React from \"react\";\nimport { CurrentUserContext } from \"../../../context/CurrentUserContext\";\n\nfunction Cards(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const cardDeleteButtonClassName = `element__basket ${\n    props.card.owner._id === currentUser._id ? \"element__basket_active\" : \"\"\n  }`;\n  const cardLikeButtonClassName = `element__like ${\n    props.card.likes.some((i) => i._id === currentUser._id)\n      ? \"element__like_active\"\n      : \"\"\n  }`;\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(props.card);\n  }\n  return (\n    <div className=\"element\">\n      <button\n        type=\"button\"\n        onClick={handleDeleteClick}\n        className={cardDeleteButtonClassName}\n      ></button>\n      <img\n        className=\"element__image\"\n        src={props.card.link}\n        alt={props.card.name}\n        onClick={handleClick}\n      />\n      <div className=\"element__group\">\n        <h2 className=\"element__title\">{props.card.name}</h2>\n        <div className=\"element__likebox\">\n          <button\n            onClick={handleLikeClick}\n            className={cardLikeButtonClassName}\n            type=\"button\"\n          ></button>\n          <p className=\"element__like-number\">{props.card.likes.length}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Cards;\n","import React from \"react\";\n\nfunction ImagePopup(props) {\n  return (\n    <section className={`popup popup_type_${props.name} ${props.isOpen}`}>\n      <figure className=\"popup__container popup__container_figure\">\n        <button\n          className=\"popup__close\"\n          type=\"button\"\n          onClick={props.onClose}\n        ></button>\n        <img className=\"popup__img\" src={props.card.src} alt={props.card.alt} />\n        <figcaption className=\"popup__text\">{props.card.title}</figcaption>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","import React from \"react\";\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\nimport Cards from \"../Cards/Cards\";\nimport ImagePopup from \"../ImagePopup/ImagePopup\";\nimport { CurrentUserContext } from \"../../../context/CurrentUserContext\";\n\nfunction Main(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <>\n      <section className=\"profile\">\n        <div className=\"profile__info\">\n          <div className=\"profile__overlay\">\n            <img\n              className=\"profile__avatar\"\n              onClick={props.onEditAvatar}\n              src={currentUser.avatar}\n              alt=\"Фотография профиля\"\n            />\n          </div>\n          <div className=\"profile__text\">\n            <div className=\"profile__topline\">\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\n              <button\n                className=\"profile__button profile__button_edit\"\n                type=\"button\"\n                onClick={props.onEditProfile}\n              ></button>\n            </div>\n            <p className=\"profile__about\">{currentUser.about}</p>\n          </div>\n        </div>\n        <button\n          className=\"profile__button profile__button_add\"\n          onClick={props.onAddPlace}\n          type=\"button\"\n        ></button>\n      </section>\n      <section className=\"elements\">\n        {props.cards.map((card) => (\n          <Cards\n            onCardLike={props.onCardLike}\n            key={card._id}\n            onCardClick={props.onSelectedCard}\n            onCardDelete={props.onCardDelete}\n            card={card}\n          />\n        ))}\n      </section>\n      <PopupWithForm\n        name=\"agree\"\n        title=\"Вы уверены?\"\n        button=\"Да\"\n        onClose={props.onClose}\n      />\n      <ImagePopup\n        name=\"figure\"\n        card={props.selectedCard}\n        isOpen={props.isSelectedCard ? \"popup_on\" : \"\"}\n        onClose={props.onClose}\n      />\n    </>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&#169; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","const handleResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`); // если ошибка, отклоняем промис\n};\n\nclass Api {\n  constructor({ baseUrl, headers }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  }\n  getMe() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers,\n    })\n      .then(handleResponse)\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"GET\",\n      headers: this.headers,\n    })\n      .then(handleResponse)\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n  createCards(data) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({ name: data.name, link: data.link }),\n    })\n      .then(handleResponse)\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n  deleteCards(idCard) {\n    return fetch(`${this.baseUrl}/cards/${idCard}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    })\n      .then(handleResponse)\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n  changeLikeCards(idCard, isLiked) {\n    return fetch(`${this.baseUrl}/cards/likes/${idCard}`, {\n      method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\n      headers: this.headers,\n    })\n      .then(handleResponse)\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n  changeAvatar(data) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({ avatar: data.avatar }),\n    })\n      .then(handleResponse)\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n  changeUserInfo(data) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({ name: data.name, about: data.about }),\n    })\n      .then(handleResponse)\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-14\",\n  headers: {\n    authorization: \"9eba132f-f547-4f26-8f5f-732456ccc9d1\",\n    \"Content-Type\": \"application/json\",\n  },\n});\nexport default api;\n","import React from \"react\";\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\nimport { CurrentUserContext } from \"../../../context/CurrentUserContext\";\n\nfunction EditProfilePopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState(\"\");\n  const [about, setAbout] = React.useState(\"\");\n\n  React.useEffect(() => {\n    if (props.isOpen) {\n      setName(currentUser.name);\n      setAbout(currentUser.about);\n    }\n  }, [currentUser, props.isOpen]);\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleChangeAbout(e) {\n    setAbout(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onUpdateUser({\n      name: name,\n      about: about,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"profile\"\n      title=\"Редактировать профиль\"\n      button=\"Сохранить\"\n      isOpen={props.isOpen ? \"popup_on\" : \"\"}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        value={name}\n        name=\"name\"\n        className=\"popup__input popup__input_name\"\n        id=\"name-input\"\n        required\n        minLength=\"2\"\n        maxLength=\"40\"\n        onChange={handleChangeName}\n      />\n      <span className=\"popup__input-error\" id=\"name-input-error\">\n        Необходимо заполнить данное поле\n      </span>\n      <input\n        value={about}\n        type=\"text\"\n        name=\"about\"\n        className=\"popup__input popup__input_about\"\n        id=\"about-input\"\n        required\n        minLength=\"2\"\n        maxLength=\"200\"\n        onChange={handleChangeAbout}\n      />\n      <span className=\"popup__input-error\" id=\"about-input-error\">\n        Необходимо заполнить данное поле\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React from \"react\";\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\n\nfunction EditProfilePopup(props) {\n  const avatarRef = React.useRef(\"\");\n\n  React.useEffect(() => {\n    avatarRef.current.value = \"\";\n  }, [props.isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"avatar\"\n      title=\"Обновить аватар\"\n      button=\"Сохранить\"\n      isOpen={props.isOpen ? \"popup_on\" : \"\"}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        ref={avatarRef}\n        type=\"url\"\n        name=\"link\"\n        className=\"popup__input popup__input_link\"\n        id=\"link-input\"\n        placeholder=\"Ссылка на картинку\"\n        required\n      />\n      <span className=\"popup__input-error\" id=\"link-input-error\">\n        Необходимо заполнить данное поле\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React from \"react\";\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\n\nfunction AddPlacePopup(props) {\n  const nameRef = React.useRef(\"\");\n  const linkRef = React.useRef(\"\");\n\n  React.useEffect(() => {\n    nameRef.current.value = \"\";\n    linkRef.current.value = \"\";\n  }, [props.isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onAddPlace({\n      name: nameRef.current.value,\n      link: linkRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"place\"\n      title=\"Новое место\"\n      button=\"Создать\"\n      isOpen={props.isOpen ? \"popup_on\" : \"\"}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        ref={nameRef}\n        type=\"text\"\n        name=\"name\"\n        className=\"popup__input popup__input_title\"\n        id=\"title-input\"\n        placeholder=\"Название\"\n        required\n        minLength=\"1\"\n        maxLength=\"30\"\n      />\n      <span className=\"popup__input-error\" id=\"title-input-error\">\n        Необходимо заполнить данное поле\n      </span>\n      <input\n        ref={linkRef}\n        type=\"url\"\n        name=\"link\"\n        className=\"popup__input popup__input_link\"\n        id=\"link-input\"\n        placeholder=\"Ссылка на картинку\"\n        required\n      />\n      <span className=\"popup__input-error\" id=\"link-input-error\">\n        Необходимо заполнить данное поле\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import React from \"react\";\nimport Header from \"./landing/Header/Header\";\nimport Main from \"./landing/Main/Main\";\nimport Footer from \"./landing/Footer/Footer\";\nimport api from \"../utils/Api\";\nimport EditProfilePopup from \"./landing/EditProfilePopup/EditProfilePopup\";\nimport EditAvatarPopup from \"./landing/EditAvatarPopup/EditAvatarPopup\";\nimport AddPlacePopup from \"./landing/AddPlacePopup/AddPlacePopup\";\nimport { CurrentUserContext } from \"../context/CurrentUserContext\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(\n    false\n  );\n  const [cards, setCards] = React.useState([]);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    src: \"\",\n    alt: \"\",\n    title: \"\",\n  });\n\n  // const [isEditAgreePopupOpen, setEditAgreePopupOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    Promise.all([api.getMe(), api.getInitialCards()]).then(([user, cards]) => {\n      setCurrentUser(user);\n      setCards(cards);\n    });\n  }, []);\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setImagePopupOpen(false);\n    setSelectedCard({});\n    //  setEditAgreePopupOpen(false);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setImagePopupOpen(true);\n    setSelectedCard({ src: card.link, alt: card.name, title: card.name });\n  }\n\n  function handleUpdateUser(userInfo) {\n    api\n      .changeUserInfo(userInfo)\n      .then((newUser) => setCurrentUser(newUser))\n      .finally(() => {\n        closeAllPopups();\n      });\n  }\n\n  function handleUpdateAvatar(userAvatar) {\n    api\n      .changeAvatar(userAvatar)\n      .then((newUser) => setCurrentUser(newUser))\n      .finally(() => {\n        closeAllPopups();\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    api.changeLikeCards(card._id, !isLiked).then((newCard) => {\n      const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n      setCards(newCards);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteCards(card._id)\n      .then(() => setCards(cards.filter((item) => item !== card)));\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api\n      .createCards(card)\n      .then((newCard) => setCards([newCard, ...cards]))\n      .finally(() => {\n        closeAllPopups();\n      });\n  }\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onSelectedCard={handleCardClick}\n          isSelectedCard={isImagePopupOpen}\n          selectedCard={selectedCard}\n          onClose={closeAllPopups}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        <Footer />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}