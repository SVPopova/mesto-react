{"version":3,"sources":["components/landing/Header/Header.js","components/landing/PopupWithForm/PopupWithForm.js","utils/Api.js","components/landing/Cards/Cards.js","components/landing/ImagePopup/ImagePopup.js","components/landing/Main/Main.js","components/landing/Footer/Footer.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","href","src","logoMesto","alt","PopupWithForm","props","name","isOpen","method","action","noValidate","type","onClick","onClose","title","children","button","api","baseUrl","headers","this","fetch","then","res","ok","json","Promise","reject","status","catch","err","console","log","data","body","JSON","stringify","link","idCard","avatar","about","authorization","Cards","card","onCardClick","likes","ImagePopup","Main","useState","userAvatar","setUserAvatar","userName","setUserName","userDescription","setUserDescription","cards","setCards","useEffect","getMe","user","getInitialCards","items","map","id","_id","length","onEditAvatar","onEditProfile","onAddPlace","key","onSelectedCard","isOpenProfile","required","minLength","maxLength","isOpenPlace","placeholder","isOpenAvatar","selectedCard","isSelectedCard","Footer","App","React","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isImagePopupOpen","setImagePopupOpen","setSelectedCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.9cc1f204.chunk.js","sourcesContent":["import React from \"react\";\nimport logoMesto from \"../../../images/logo.svg\";\nfunction Header() {\n  return (\n    <>\n      <header className=\"header\">\n        <a className=\"header__logo-link\" href=\"#root\">\n          <img\n            className=\"header__logo-img\"\n            src={logoMesto}\n            alt=\"Логотип Mesto Russia\"\n          />\n        </a>\n      </header>\n    </>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nfunction PopupWithForm(props) {\n  return (\n    <>\n      <section className={`popup popup_type_${props.name} ${props.isOpen}`}>\n        <form\n          className=\"popup__container popup__container_form\"\n          method=\"GET\"\n          action=\"#\"\n          name={`${props.name}`}\n          noValidate\n        >\n          <button\n            className=\"popup__close\"\n            type=\"button\"\n            onClick={props.onClose}\n          ></button>\n          <h2 className=\"popup__title popup__title_profile\">{`${props.title}`}</h2>\n          {props.children}\n          <button type=\"submit\" className=\"popup__button\">\n            {props.button}\n          </button>\n        </form>\n      </section>\n    </>\n  );\n}\n\nexport default PopupWithForm;\n","class Api {\n  constructor({ baseUrl, headers }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  }\n  getMe() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers,\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`); // если ошибка, отклоняем промис\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"GET\",\n      headers: this.headers,\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`); // если ошибка, отклоняем промис\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n  createCards(data) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({ name: data.name, link: data.link }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n  deleteCards(idCard) {\n    return fetch(`${this.baseUrl}/cards/${idCard}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`); // если ошибка, отклоняем промис\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n  likeCards(idCard) {\n    return fetch(`${this.baseUrl}/cards/likes/${idCard}`, {\n      method: \"PUT\",\n      headers: this.headers,\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`); // если ошибка, отклоняем промис\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n  unLikeCards(idCard) {\n    return fetch(`${this.baseUrl}/cards/likes/${idCard}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`); // если ошибка, отклоняем промис\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n  changeAvatar(avatar) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({ avatar }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`); // если ошибка, отклоняем промис\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n  changeUserInfo(data) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({ name: data.name, about: data.about }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`); // если ошибка, отклоняем промис\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-14\",\n  headers: {\n    authorization: \"9eba132f-f547-4f26-8f5f-732456ccc9d1\",\n    \"Content-Type\": \"application/json\",\n  },\n});\nexport default api;\n","import React from \"react\";\n\nfunction Cards(props) {\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n  return (\n    <>\n      <div className=\"element\">\n        <button type=\"button\" className=\"element__basket\"></button>\n        <img\n          className=\"element__image\"\n          src={props.card.src}\n          alt={props.card.alt}\n          onClick={handleClick}\n        />\n        <div className=\"element__group\">\n          <h2 className=\"element__title\">{props.card.title}</h2>\n          <div className=\"element__likebox\">\n            <button className=\"element__like\" type=\"button\"></button>\n            <p className=\"element__like-number\">{props.card.likes}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Cards;\n","import React from \"react\";\nfunction ImagePopup(props) {\n  return (\n    <>\n      <section className={`popup popup_type_${props.name} ${props.isOpen}`}>\n        <figure className=\"popup__container popup__container_figure\">\n          <button\n            className=\"popup__close\"\n            type=\"button\"\n            onClick={props.onClose}\n          ></button>\n          <img\n            className=\"popup__img\"\n            src={props.card.src}\n            alt={props.card.alt}\n          />\n          <figcaption className=\"popup__text\">{props.card.title}</figcaption>\n        </figure>\n      </section>\n    </>\n  );\n}\n\nexport default ImagePopup;\n","import React, { useEffect, useState } from \"react\";\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\nimport api from \"../../../utils/Api\";\nimport Cards from \"../Cards/Cards\";\nimport ImagePopup from \"../ImagePopup/ImagePopup\";\nfunction Main(props) {\n  const [userAvatar, setUserAvatar] = useState();\n  const [userName, setUserName] = useState();\n  const [userDescription, setUserDescription] = useState();\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    api.getMe().then((user) => {\n      setUserAvatar(user.avatar);\n      setUserName(user.name);\n      setUserDescription(user.about);\n    });\n    api.getInitialCards().then((cards) => {\n      const items = cards.map((card) => ({\n        id: card._id,\n        src: card.link,\n        alt: card.name,\n        title: card.name,\n        likes: card.likes.length,\n      }));\n      setCards(items);\n    });\n  }, []);\n  return (\n    <>\n      <section className=\"profile\">\n        <div className=\"profile__info\">\n          <div className=\"profile__overlay\">\n            <img\n              className=\"profile__avatar\"\n              onClick={props.onEditAvatar}\n              src={userAvatar}\n              alt=\"Фотография профиля\"\n            />\n          </div>\n          <div className=\"profile__text\">\n            <div className=\"profile__topline\">\n              <h1 className=\"profile__name\">{userName}</h1>\n              <button\n                className=\"profile__button profile__button_edit\"\n                type=\"button\"\n                onClick={props.onEditProfile}\n              ></button>\n            </div>\n            <p className=\"profile__about\">{userDescription}</p>\n          </div>\n        </div>\n        <button\n          className=\"profile__button profile__button_add\"\n          onClick={props.onAddPlace}\n          type=\"button\"\n        ></button>\n      </section>\n      <section className=\"elements\">\n        {cards.map((card) => (\n          <Cards key={card.id} onCardClick={props.onSelectedCard} card={card} />\n        ))}\n      </section>\n      <PopupWithForm\n        name=\"profile\"\n        title=\"Редактировать профиль\"\n        button=\"Сохранить\"\n        isOpen={props.isOpenProfile ? \"popup_on\" : \"\"}\n        onClose={props.onClose}\n      >\n        <input\n          type=\"text\"\n          name=\"name\"\n          className=\"popup__input popup__input_name\"\n          id=\"name-input\"\n          required\n          minLength=\"2\"\n          maxLength=\"40\"\n        />\n        <span className=\"popup__input-error\" id=\"name-input-error\">\n          Необходимо заполнить данное поле\n        </span>\n        <input\n          type=\"text\"\n          name=\"about\"\n          className=\"popup__input popup__input_about\"\n          id=\"about-input\"\n          required\n          minLength=\"2\"\n          maxLength=\"200\"\n        />\n        <span className=\"popup__input-error\" id=\"about-input-error\">\n          Необходимо заполнить данное поле\n        </span>\n      </PopupWithForm>\n      <PopupWithForm\n        name=\"place\"\n        title=\"Новое место\"\n        button=\"Создать\"\n        isOpen={props.isOpenPlace ? \"popup_on\" : \"\"}\n        onClose={props.onClose}\n      >\n        <input\n          type=\"text\"\n          name=\"name\"\n          className=\"popup__input popup__input_title\"\n          id=\"title-input\"\n          placeholder=\"Название\"\n          required\n          minLength=\"1\"\n          maxLength=\"30\"\n        />\n        <span className=\"popup__input-error\" id=\"title-input-error\">\n          Необходимо заполнить данное поле\n        </span>\n        <input\n          type=\"url\"\n          name=\"link\"\n          className=\"popup__input popup__input_link\"\n          id=\"link-input\"\n          placeholder=\"Ссылка на картинку\"\n          required\n        />\n        <span className=\"popup__input-error\" id=\"link-input-error\">\n          Необходимо заполнить данное поле\n        </span>\n      </PopupWithForm>\n      <PopupWithForm\n        name=\"avatar\"\n        title=\"Обновить аватар\"\n        button=\"Сохранить\"\n        isOpen={props.isOpenAvatar ? \"popup_on\" : \"\"}\n        onClose={props.onClose}\n      >\n        <input\n          type=\"url\"\n          name=\"link\"\n          className=\"popup__input popup__input_link\"\n          id=\"link-input\"\n          placeholder=\"Ссылка на картинку\"\n          required\n        />\n        <span className=\"popup__input-error\" id=\"link-input-error\">\n          Необходимо заполнить данное поле\n        </span>\n      </PopupWithForm>\n      <PopupWithForm\n        name=\"agree\"\n        title=\"Вы уверены?\"\n        button=\"Да\"\n        onClose={props.onClose}\n      />\n      <ImagePopup\n        name=\"figure\"\n        card={props.selectedCard}\n        isOpen={props.isSelectedCard ? \"popup_on\" : \"\"}\n        onClose={props.onClose}\n      />\n    </>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <>\n      <footer className=\"footer\">\n        <p className=\"footer__copyright\">&#169; 2020 Mesto Russia</p>\n      </footer>\n    </>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport Header from \"./landing/Header/Header\";\nimport Main from \"./landing/Main/Main\";\nimport Footer from \"./landing/Footer/Footer\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(\n    false\n  );\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    src: \"\",\n    alt: \"\",\n    title: \"\",\n  });\n  // const [isEditAgreePopupOpen, setEditAgreePopupOpen] = React.useState(false);\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setImagePopupOpen(false);\n    setSelectedCard({});\n    //  setEditAgreePopupOpen(false);\n  }\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setImagePopupOpen(true);\n    setSelectedCard({ src: card.src, alt: card.alt, title: card.title });\n  }\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onSelectedCard={handleCardClick}\n        isOpenProfile={isEditProfilePopupOpen}\n        isOpenAvatar={isEditAvatarPopupOpen}\n        isOpenPlace={isAddPlacePopupOpen}\n        isSelectedCard={isImagePopupOpen}\n        selectedCard={selectedCard}\n        onClose={closeAllPopups}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}